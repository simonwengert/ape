# This workflow will upload a Python Package using Twine when a release is created

name: Upload Python Package

on:
  release:
    types: [published]

jobs:
  deploy:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.8 ]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
          python-version: ${{ matrix.python-version }}
        
    - name: Check tag
      id: check-tag
      run: |
        if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            echo "match=true" >> $GITHUB_OUTPUT              
        fi
      shell: bash
      
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade build
        python3 -m pip install --upgrade twine
      shell: bash
        
    - name: Build package
      run: python -m build
      shell: bash
      
    - name: Deploy package
      if: steps.check-tag.outputs.match == 'true'
      run: |
        python3 -m twine upload --repository testpypi dist/*
      env:
        TWINE_USERNAME: '__token__'
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      shell: bash
